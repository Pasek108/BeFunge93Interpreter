{
  "description1": "BeFunge-93 is first version of esoteric programming language BeFunge invented by Chris Pressey in 1993 with the goal of being as difficult to compile aspossible.",
  "description2": "Code is laid out on a two-dimensional grid of instructions of size 80x25 and executed by moving in any direction executing command located in current place of grid. BeFunge-93 stores data on single stack, but it can also read and write the contents of any cell in the grid, thereby program code can be self-modifying.",
  "see_more": "See more on ",
  "command": "Command",
  "description": "Description",
  "push_number": "Push corresponding number onto the stack",
  "add_numbers": "Pop two values A and B, then push the result of B + A",
  "substract_numbers": "Pop two values A and B, then push the result of B - A",
  "multiply_numbers": "Pop two values A and B, then push the result of B * A",
  "divide_numbers": "Pop two values A and B, then push the result of B / A rounded down",
  "modulo": "Pop two values A and B, then push the remainder of the integer division of B / A",
  "negation": "Pop value A. If A is equal to 0, push 1, otherwise zero",
  "compare": "Pop two values A and B, if B > A, push 1, otherwise zero",
  "direction_right": "Sets direction to the right",
  "direction_left": "Sets direction to the left",
  "direction_top": "Sets direction to the top",
  "direction_bottom": "Sets direction to the bottom",
  "direction_random": "Sets random direction",
  "direction_horizontal_condition": "Pop value A, if A is equal to the 0 set direction to the right, otherwise to the left",
  "direction_vertical_condition": "Pop value A, if A is equal to the 0 set direction to the bottom, otherwise to the top",
  "string_mode": "Toggle stringmode (push each character's ASCII value all the way up to the next \")",
  "duplicate": "Duplicate top stack value",
  "swap": "Swap top stack values",
  "pop": "Pop top of stack and discard",
  "output_int": "Pop value A and output it as integer",
  "output_char": "Pop value A and output it as ASCII character",
  "skip": "Jump over next command in the current direction",
  "get": "Pop two value Y i X, then push the ASCII value of the character at that position in the program",
  "put": "Pop three value Y, X i V, then change the character at the position [Y, X] in the program to the character with ASCII value V",
  "input_int": "Get integer from user and push it",
  "input_char": "Get ASCII character from user and push it",
  "end": "End program",
  "example_programs": "Example programs",
  "console": "Console",
  "stack": "Stack",
  "program_code": "Program code",
  "show_grid": "Show grid",
  "select": "Select",
  "one_time_breakpoint": "One-time breakpoint",
  "breakpoint": "Breakpoint",
  "pointer": "Pointer",
  "pointer_speed": "Pointer speed",
  "informations": "Informations",
  "instructions": "Instructions",
  "help": "Help",
  "load": "Load",
  "execute": "Execute",
  "run": "Run",
  "step": "Step",
  "stop": "Stop"
}
